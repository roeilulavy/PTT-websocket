{"ast":null,"code":"//var SegfaultHandler = require('segfault-handler');\n//SegfaultHandler.registerHandler();\nvar index = require('./package.json');\n\nfunction isFunction(functionToCheck) {\n  return typeof functionToCheck === 'function';\n}\n\nif (global[index.name] && global[index.name].version === index.version) {\n  module.exports = global[index.name];\n} else {\n  var detection = require('bindings')('detection.node');\n\n  var EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n  var detector = new EventEmitter2({\n    wildcard: true,\n    delimiter: ':',\n    maxListeners: 1000 // default would be 10!\n\n  }); //detector.find = detection.find;\n\n  detector.find = function (vid, pid, callback) {\n    // Suss out the optional parameters\n    if (isFunction(vid) && !pid && !callback) {\n      callback = vid;\n      vid = undefined;\n    } else if (isFunction(pid) && !callback) {\n      callback = pid;\n      pid = undefined;\n    }\n\n    return new Promise(function (resolve, reject) {\n      // Assemble the optional args into something we can use with `apply`\n      var args = [];\n\n      if (vid) {\n        args = args.concat(vid);\n      }\n\n      if (pid) {\n        args = args.concat(pid);\n      } // Tack on our own callback that takes care of things\n\n\n      args = args.concat(function (err, devices) {\n        // We call the callback if they passed one\n        if (callback) {\n          callback.call(callback, err, devices);\n        } // But also do the promise stuff\n\n\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve(devices);\n      }); // Fire off the `find` function that actually does all of the work\n\n      detection.find.apply(detection, args);\n    });\n  };\n\n  detection.registerAdded(function (device) {\n    detector.emit('add:' + device.vendorId + ':' + device.productId, device);\n    detector.emit('insert:' + device.vendorId + ':' + device.productId, device);\n    detector.emit('add:' + device.vendorId, device);\n    detector.emit('insert:' + device.vendorId, device);\n    detector.emit('add', device);\n    detector.emit('insert', device);\n    detector.emit('change:' + device.vendorId + ':' + device.productId, device);\n    detector.emit('change:' + device.vendorId, device);\n    detector.emit('change', device);\n  });\n  detection.registerRemoved(function (device) {\n    detector.emit('remove:' + device.vendorId + ':' + device.productId, device);\n    detector.emit('remove:' + device.vendorId, device);\n    detector.emit('remove', device);\n    detector.emit('change:' + device.vendorId + ':' + device.productId, device);\n    detector.emit('change:' + device.vendorId, device);\n    detector.emit('change', device);\n  });\n  var started = false;\n\n  detector.startMonitoring = function () {\n    if (started) {\n      return;\n    }\n\n    started = true;\n    detection.startMonitoring();\n  };\n\n  detector.stopMonitoring = function () {\n    if (!started) {\n      return;\n    }\n\n    started = false;\n    detection.stopMonitoring();\n  };\n\n  detector.version = index.version;\n  global[index.name] = detector;\n  module.exports = detector;\n}","map":{"version":3,"names":["index","require","isFunction","functionToCheck","global","name","version","module","exports","detection","EventEmitter2","detector","wildcard","delimiter","maxListeners","find","vid","pid","callback","undefined","Promise","resolve","reject","args","concat","err","devices","call","apply","registerAdded","device","emit","vendorId","productId","registerRemoved","started","startMonitoring","stopMonitoring"],"sources":["D:/Projects/React/PTT-react/client/node_modules/usb-detection/index.js"],"sourcesContent":["//var SegfaultHandler = require('segfault-handler');\n//SegfaultHandler.registerHandler();\n\nvar index = require('./package.json');\n\nfunction isFunction(functionToCheck) {\n\treturn typeof functionToCheck === 'function';\n}\n\nif(global[index.name] && global[index.name].version === index.version) {\n\tmodule.exports = global[index.name];\n} else {\n\tvar detection = require('bindings')('detection.node');\n\tvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n\tvar detector = new EventEmitter2({\n\t\twildcard: true,\n\t\tdelimiter: ':',\n\t\tmaxListeners: 1000 // default would be 10!\n\t});\n\n\t//detector.find = detection.find;\n\tdetector.find = function(vid, pid, callback) {\n\t\t// Suss out the optional parameters\n\t\tif(isFunction(vid) && !pid && !callback) {\n\t\t\tcallback = vid;\n\t\t\tvid = undefined;\n\t\t} else if(isFunction(pid) && !callback) {\n\t\t\tcallback = pid;\n\t\t\tpid = undefined;\n\t\t}\n\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\t// Assemble the optional args into something we can use with `apply`\n\t\t\tvar args = [];\n\t\t\tif(vid) {\n\t\t\t\targs = args.concat(vid);\n\t\t\t}\n\t\t\tif(pid) {\n\t\t\t\targs = args.concat(pid);\n\t\t\t}\n\n\t\t\t// Tack on our own callback that takes care of things\n\t\t\targs = args.concat(function(err, devices) {\n\n\t\t\t\t// We call the callback if they passed one\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback.call(callback, err, devices);\n\t\t\t\t}\n\n\t\t\t\t// But also do the promise stuff\n\t\t\t\tif(err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(devices);\n\t\t\t});\n\n\t\t\t// Fire off the `find` function that actually does all of the work\n\t\t\tdetection.find.apply(detection, args);\n\t\t});\n\t};\n\n\tdetection.registerAdded(function(device) {\n\t\tdetector.emit('add:' + device.vendorId + ':' + device.productId, device);\n\t\tdetector.emit('insert:' + device.vendorId + ':' + device.productId, device);\n\t\tdetector.emit('add:' + device.vendorId, device);\n\t\tdetector.emit('insert:' + device.vendorId, device);\n\t\tdetector.emit('add', device);\n\t\tdetector.emit('insert', device);\n\n\t\tdetector.emit('change:' + device.vendorId + ':' + device.productId, device);\n\t\tdetector.emit('change:' + device.vendorId, device);\n\t\tdetector.emit('change', device);\n\t});\n\n\tdetection.registerRemoved(function(device) {\n\t\tdetector.emit('remove:' + device.vendorId + ':' + device.productId, device);\n\t\tdetector.emit('remove:' + device.vendorId, device);\n\t\tdetector.emit('remove', device);\n\n\t\tdetector.emit('change:' + device.vendorId + ':' + device.productId, device);\n\t\tdetector.emit('change:' + device.vendorId, device);\n\t\tdetector.emit('change', device);\n\t});\n\n\tvar started = false;\n\n\tdetector.startMonitoring = function() {\n\t\tif(started) {\n\t\t\treturn;\n\t\t}\n\n\t\tstarted = true;\n\t\tdetection.startMonitoring();\n\t};\n\n\tdetector.stopMonitoring = function() {\n\t\tif(!started) {\n\t\t\treturn;\n\t\t}\n\n\t\tstarted = false;\n\t\tdetection.stopMonitoring();\n\t};\n\n\tdetector.version = index.version;\n\tglobal[index.name] = detector;\n\n\tmodule.exports = detector;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}