{"ast":null,"code":"/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\n;\n!function (undefined) {\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n\n  function init() {\n    this._events = {};\n\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n      this._conf = conf;\n      conf.delimiter && (this.delimiter = conf.delimiter);\n      this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this._newListener = conf.newListener);\n      conf.removeListener && (this._removeListener = conf.removeListener);\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    } else {\n      this._maxListeners = defaultMaxListeners;\n    }\n  }\n\n  function logPossibleMemoryLeak(count, eventName) {\n    var errorMsg = '(node) warning: possible EventEmitter memory ' + 'leak detected. ' + count + ' listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.';\n\n    if (this.verboseMemoryLeak) {\n      errorMsg += ' Event name: ' + eventName + '.';\n    }\n\n    if (typeof process !== 'undefined' && process.emitWarning) {\n      var e = new Error(errorMsg);\n      e.name = 'MaxListenersExceededWarning';\n      e.emitter = this;\n      e.count = count;\n      process.emitWarning(e);\n    } else {\n      console.error(errorMsg);\n\n      if (console.trace) {\n        console.trace();\n      }\n    }\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this._newListener = false;\n    this._removeListener = false;\n    this.verboseMemoryLeak = false;\n    configure.call(this, conf);\n  }\n\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n  //\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n\n  function searchListenerTree(handlers, type, tree, i) {\n    if (!tree) {\n      return [];\n    }\n\n    var listeners = [],\n        leaf,\n        len,\n        branch,\n        xTree,\n        xxTree,\n        isolatedBranch,\n        endReached,\n        typeLength = type.length,\n        currentType = type[i],\n        nextType = type[i + 1];\n\n    if (i === typeLength && tree._listeners) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n      if (typeof tree._listeners === 'function') {\n        handlers && handlers.push(tree._listeners);\n        return [tree];\n      } else {\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n          handlers && handlers.push(tree._listeners[leaf]);\n        }\n\n        return [tree];\n      }\n    }\n\n    if (currentType === '*' || currentType === '**' || tree[currentType]) {\n      //\n      // If the event emitted is '*' at this part\n      // or there is a concrete match at this patch\n      //\n      if (currentType === '*') {\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n          }\n        }\n\n        return listeners;\n      } else if (currentType === '**') {\n        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === '*';\n\n        if (endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n        }\n\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            if (branch === '*' || branch === '**') {\n              if (tree[branch]._listeners && !endReached) {\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n              }\n\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            } else if (branch === nextType) {\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            }\n          }\n        }\n\n        return listeners;\n      }\n\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n    }\n\n    xTree = tree['*'];\n\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i + 1);\n    }\n\n    xxTree = tree['**'];\n\n    if (xxTree) {\n      if (i < typeLength) {\n        if (xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength);\n        } // Build arrays of matching next branches and others.\n\n\n        for (branch in xxTree) {\n          if (branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n            if (branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i + 2);\n            } else if (branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i + 1);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, {\n                '**': isolatedBranch\n              }, i + 1);\n            }\n          }\n        }\n      } else if (xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength);\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener) {\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice(); //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n\n    for (var i = 0, len = type.length; i + 1 < len; i++) {\n      if (type[i] === '**' && type[i + 1] === '**') {\n        return;\n      }\n    }\n\n    var tree = this.listenerTree;\n    var name = type.shift();\n\n    while (name !== undefined) {\n      if (!tree[name]) {\n        tree[name] = {};\n      }\n\n      tree = tree[name];\n\n      if (type.length === 0) {\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        } else {\n          if (typeof tree._listeners === 'function') {\n            tree._listeners = [tree._listeners];\n          }\n\n          tree._listeners.push(listener);\n\n          if (!tree._listeners.warned && this._maxListeners > 0 && tree._listeners.length > this._maxListeners) {\n            tree._listeners.warned = true;\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n          }\n        }\n\n        return true;\n      }\n\n      name = type.shift();\n    }\n\n    return true;\n  } // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function (n) {\n    if (n !== undefined) {\n      this._maxListeners = n;\n      if (!this._conf) this._conf = {};\n      this._conf.maxListeners = n;\n    }\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function (event, fn) {\n    return this._once(event, fn, false);\n  };\n\n  EventEmitter.prototype.prependOnceListener = function (event, fn) {\n    return this._once(event, fn, true);\n  };\n\n  EventEmitter.prototype._once = function (event, fn, prepend) {\n    this._many(event, 1, fn, prepend);\n\n    return this;\n  };\n\n  EventEmitter.prototype.many = function (event, ttl, fn) {\n    return this._many(event, ttl, fn, false);\n  };\n\n  EventEmitter.prototype.prependMany = function (event, ttl, fn) {\n    return this._many(event, ttl, fn, true);\n  };\n\n  EventEmitter.prototype._many = function (event, ttl, fn, prepend) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n\n      return fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    this._on(event, listener, prepend);\n\n    return self;\n  };\n\n  EventEmitter.prototype.emit = function () {\n    this._events || init.call(this);\n    var type = arguments[0];\n\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return false;\n      }\n    }\n\n    var al = arguments.length;\n    var args, l, i, j;\n    var handler;\n\n    if (this._all && this._all.length) {\n      handler = this._all.slice();\n\n      if (al > 3) {\n        args = new Array(al);\n\n        for (j = 0; j < al; j++) args[j] = arguments[j];\n      }\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            handler[i].call(this, type);\n            break;\n\n          case 2:\n            handler[i].call(this, type, arguments[1]);\n            break;\n\n          case 3:\n            handler[i].call(this, type, arguments[1], arguments[2]);\n            break;\n\n          default:\n            handler[i].apply(this, args);\n        }\n      }\n    }\n\n    if (this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n\n      if (typeof handler === 'function') {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            handler.call(this);\n            break;\n\n          case 2:\n            handler.call(this, arguments[1]);\n            break;\n\n          case 3:\n            handler.call(this, arguments[1], arguments[2]);\n            break;\n\n          default:\n            args = new Array(al - 1);\n\n            for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n\n            handler.apply(this, args);\n        }\n\n        return true;\n      } else if (handler) {\n        // need to make copy of handlers because list can change in the middle\n        // of emit call\n        handler = handler.slice();\n      }\n    }\n\n    if (handler && handler.length) {\n      if (al > 3) {\n        args = new Array(al - 1);\n\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            handler[i].call(this);\n            break;\n\n          case 2:\n            handler[i].call(this, arguments[1]);\n            break;\n\n          case 3:\n            handler[i].call(this, arguments[1], arguments[2]);\n            break;\n\n          default:\n            handler[i].apply(this, args);\n        }\n      }\n\n      return true;\n    } else if (!this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n\n      return false;\n    }\n\n    return !!this._all;\n  };\n\n  EventEmitter.prototype.emitAsync = function () {\n    this._events || init.call(this);\n    var type = arguments[0];\n\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return Promise.resolve([false]);\n      }\n    }\n\n    var promises = [];\n    var al = arguments.length;\n    var args, l, i, j;\n    var handler;\n\n    if (this._all) {\n      if (al > 3) {\n        args = new Array(al);\n\n        for (j = 1; j < al; j++) args[j] = arguments[j];\n      }\n\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            promises.push(this._all[i].call(this, type));\n            break;\n\n          case 2:\n            promises.push(this._all[i].call(this, type, arguments[1]));\n            break;\n\n          case 3:\n            promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n            break;\n\n          default:\n            promises.push(this._all[i].apply(this, args));\n        }\n      }\n    }\n\n    if (this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n\n      switch (al) {\n        case 1:\n          promises.push(handler.call(this));\n          break;\n\n        case 2:\n          promises.push(handler.call(this, arguments[1]));\n          break;\n\n        case 3:\n          promises.push(handler.call(this, arguments[1], arguments[2]));\n          break;\n\n        default:\n          args = new Array(al - 1);\n\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n\n          promises.push(handler.apply(this, args));\n      }\n    } else if (handler && handler.length) {\n      handler = handler.slice();\n\n      if (al > 3) {\n        args = new Array(al - 1);\n\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n\n        switch (al) {\n          case 1:\n            promises.push(handler[i].call(this));\n            break;\n\n          case 2:\n            promises.push(handler[i].call(this, arguments[1]));\n            break;\n\n          case 3:\n            promises.push(handler[i].call(this, arguments[1], arguments[2]));\n            break;\n\n          default:\n            promises.push(handler[i].apply(this, args));\n        }\n      }\n    } else if (!this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\n      } else {\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return Promise.all(promises);\n  };\n\n  EventEmitter.prototype.on = function (type, listener) {\n    return this._on(type, listener, false);\n  };\n\n  EventEmitter.prototype.prependListener = function (type, listener) {\n    return this._on(type, listener, true);\n  };\n\n  EventEmitter.prototype.onAny = function (fn) {\n    return this._onAny(fn, false);\n  };\n\n  EventEmitter.prototype.prependAny = function (fn) {\n    return this._onAny(fn, true);\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype._onAny = function (fn, prepend) {\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if (!this._all) {\n      this._all = [];\n    } // Add the function to the event listener collection.\n\n\n    if (prepend) {\n      this._all.unshift(fn);\n    } else {\n      this._all.push(fn);\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype._on = function (type, listener, prepend) {\n    if (typeof type === 'function') {\n      this._onAny(type, listener);\n\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n\n    this._events || init.call(this); // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n\n    if (this._newListener) this.emit('newListener', type, listener);\n\n    if (this.wildcard) {\n      growListenerTree.call(this, type, listener);\n      return this;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    } else {\n      if (typeof this._events[type] === 'function') {\n        // Change to array.\n        this._events[type] = [this._events[type]];\n      } // If we've already got an array, just add\n\n\n      if (prepend) {\n        this._events[type].unshift(listener);\n      } else {\n        this._events[type].push(listener);\n      } // Check for listener leak\n\n\n      if (!this._events[type].warned && this._maxListeners > 0 && this._events[type].length > this._maxListeners) {\n        this._events[type].warned = true;\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\n      }\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.off = function (type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,\n        leafs = [];\n\n    if (this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n    } else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({\n        _listeners: handlers\n      });\n    }\n\n    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n\n      if (isArray(handlers)) {\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if (this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        } else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if (this.wildcard) {\n            delete leaf._listeners;\n          } else {\n            delete this._events[type];\n          }\n        }\n\n        if (this._removeListener) this.emit(\"removeListener\", type, listener);\n        return this;\n      } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n        if (this.wildcard) {\n          delete leaf._listeners;\n        } else {\n          delete this._events[type];\n        }\n\n        if (this._removeListener) this.emit(\"removeListener\", type, listener);\n      }\n    }\n\n    function recursivelyGarbageCollect(root) {\n      if (root === undefined) {\n        return;\n      }\n\n      var keys = Object.keys(root);\n\n      for (var i in keys) {\n        var key = keys[i];\n        var obj = root[key];\n        if (obj instanceof Function || typeof obj !== \"object\" || obj === null) continue;\n\n        if (Object.keys(obj).length > 0) {\n          recursivelyGarbageCollect(root[key]);\n        }\n\n        if (Object.keys(obj).length === 0) {\n          delete root[key];\n        }\n      }\n    }\n\n    recursivelyGarbageCollect(this.listenerTree);\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function (fn) {\n    var i = 0,\n        l = 0,\n        fns;\n\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n\n      for (i = 0, l = fns.length; i < l; i++) {\n        if (fn === fns[i]) {\n          fns.splice(i, 1);\n          if (this._removeListener) this.emit(\"removeListenerAny\", fn);\n          return this;\n        }\n      }\n    } else {\n      fns = this._all;\n\n      if (this._removeListener) {\n        for (i = 0, l = fns.length; i < l; i++) this.emit(\"removeListenerAny\", fns[i]);\n      }\n\n      this._all = [];\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function (type) {\n    if (type === undefined) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if (this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\n      for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n        var leaf = leafs[iLeaf];\n        leaf._listeners = null;\n      }\n    } else if (this._events) {\n      this._events[type] = null;\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function (type) {\n    if (this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers;\n    }\n\n    this._events || init.call(this);\n    if (!this._events[type]) this._events[type] = [];\n\n    if (!isArray(this._events[type])) {\n      this._events[type] = [this._events[type]];\n    }\n\n    return this._events[type];\n  };\n\n  EventEmitter.prototype.eventNames = function () {\n    return Object.keys(this._events);\n  };\n\n  EventEmitter.prototype.listenerCount = function (type) {\n    return this.listeners(type).length;\n  };\n\n  EventEmitter.prototype.listenersAny = function () {\n    if (this._all) {\n      return this._all;\n    } else {\n      return [];\n    }\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function () {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = EventEmitter;\n  } else {\n    // Browser global.\n    window.EventEmitter2 = EventEmitter;\n  }\n}();","map":{"version":3,"names":["undefined","isArray","Array","_isArray","obj","Object","prototype","toString","call","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","_maxListeners","maxListeners","wildcard","newListener","_newListener","removeListener","_removeListener","verboseMemoryLeak","listenerTree","logPossibleMemoryLeak","count","eventName","errorMsg","process","emitWarning","e","Error","name","emitter","console","error","trace","EventEmitter","EventEmitter2","searchListenerTree","handlers","type","tree","i","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","length","currentType","nextType","_listeners","push","hasOwnProperty","concat","growListenerTree","listener","split","slice","shift","warned","setMaxListeners","n","event","once","fn","_once","prependOnceListener","prepend","_many","many","ttl","prependMany","self","off","apply","arguments","_origin","_on","emit","al","args","l","j","handler","_all","ns","emitAsync","Promise","resolve","promises","reject","all","on","prependListener","onAny","_onAny","prependAny","addListener","unshift","leafs","iLeaf","position","splice","recursivelyGarbageCollect","root","keys","key","Function","offAny","fns","removeAllListeners","eventNames","listenerCount","listenersAny","define","amd","exports","module","window"],"sources":["D:/Projects/React/PTT-react/client/node_modules/eventemitter2/lib/eventemitter2.js"],"sourcesContent":["/*!\r\n * EventEmitter2\r\n * https://github.com/hij1nx/EventEmitter2\r\n *\r\n * Copyright (c) 2013 hij1nx\r\n * Licensed under the MIT license.\r\n */\r\n;!function(undefined) {\r\n\r\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\r\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n  };\r\n  var defaultMaxListeners = 10;\r\n\r\n  function init() {\r\n    this._events = {};\r\n    if (this._conf) {\r\n      configure.call(this, this._conf);\r\n    }\r\n  }\r\n\r\n  function configure(conf) {\r\n    if (conf) {\r\n      this._conf = conf;\r\n\r\n      conf.delimiter && (this.delimiter = conf.delimiter);\r\n      this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;\r\n\r\n      conf.wildcard && (this.wildcard = conf.wildcard);\r\n      conf.newListener && (this._newListener = conf.newListener);\r\n      conf.removeListener && (this._removeListener = conf.removeListener);\r\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\r\n\r\n      if (this.wildcard) {\r\n        this.listenerTree = {};\r\n      }\r\n    } else {\r\n      this._maxListeners = defaultMaxListeners;\r\n    }\r\n  }\r\n\r\n  function logPossibleMemoryLeak(count, eventName) {\r\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\r\n        'leak detected. ' + count + ' listeners added. ' +\r\n        'Use emitter.setMaxListeners() to increase limit.';\r\n\r\n    if(this.verboseMemoryLeak){\r\n      errorMsg += ' Event name: ' + eventName + '.';\r\n    }\r\n\r\n    if(typeof process !== 'undefined' && process.emitWarning){\r\n      var e = new Error(errorMsg);\r\n      e.name = 'MaxListenersExceededWarning';\r\n      e.emitter = this;\r\n      e.count = count;\r\n      process.emitWarning(e);\r\n    } else {\r\n      console.error(errorMsg);\r\n\r\n      if (console.trace){\r\n        console.trace();\r\n      }\r\n    }\r\n  }\r\n\r\n  function EventEmitter(conf) {\r\n    this._events = {};\r\n    this._newListener = false;\r\n    this._removeListener = false;\r\n    this.verboseMemoryLeak = false;\r\n    configure.call(this, conf);\r\n  }\r\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\r\n\r\n  //\r\n  // Attention, function return type now is array, always !\r\n  // It has zero elements if no any matches found and one or more\r\n  // elements (leafs) if there are matches\r\n  //\r\n  function searchListenerTree(handlers, type, tree, i) {\r\n    if (!tree) {\r\n      return [];\r\n    }\r\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\r\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\r\n    if (i === typeLength && tree._listeners) {\r\n      //\r\n      // If at the end of the event(s) list and the tree has listeners\r\n      // invoke those listeners.\r\n      //\r\n      if (typeof tree._listeners === 'function') {\r\n        handlers && handlers.push(tree._listeners);\r\n        return [tree];\r\n      } else {\r\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\r\n          handlers && handlers.push(tree._listeners[leaf]);\r\n        }\r\n        return [tree];\r\n      }\r\n    }\r\n\r\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\r\n      //\r\n      // If the event emitted is '*' at this part\r\n      // or there is a concrete match at this patch\r\n      //\r\n      if (currentType === '*') {\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\r\n          }\r\n        }\r\n        return listeners;\r\n      } else if(currentType === '**') {\r\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\r\n        if(endReached && tree._listeners) {\r\n          // The next element has a _listeners, add it to the handlers.\r\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\r\n        }\r\n\r\n        for (branch in tree) {\r\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\r\n            if(branch === '*' || branch === '**') {\r\n              if(tree[branch]._listeners && !endReached) {\r\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\r\n              }\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            } else if(branch === nextType) {\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\r\n            } else {\r\n              // No match on this one, shift into the tree but not in the type array.\r\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\r\n            }\r\n          }\r\n        }\r\n        return listeners;\r\n      }\r\n\r\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\r\n    }\r\n\r\n    xTree = tree['*'];\r\n    if (xTree) {\r\n      //\r\n      // If the listener tree will allow any match for this part,\r\n      // then recursively explore all branches of the tree\r\n      //\r\n      searchListenerTree(handlers, type, xTree, i+1);\r\n    }\r\n\r\n    xxTree = tree['**'];\r\n    if(xxTree) {\r\n      if(i < typeLength) {\r\n        if(xxTree._listeners) {\r\n          // If we have a listener on a '**', it will catch all, so add its handler.\r\n          searchListenerTree(handlers, type, xxTree, typeLength);\r\n        }\r\n\r\n        // Build arrays of matching next branches and others.\r\n        for(branch in xxTree) {\r\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\r\n            if(branch === nextType) {\r\n              // We know the next element will match, so jump twice.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\r\n            } else if(branch === currentType) {\r\n              // Current node matches, move into the tree.\r\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\r\n            } else {\r\n              isolatedBranch = {};\r\n              isolatedBranch[branch] = xxTree[branch];\r\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\r\n            }\r\n          }\r\n        }\r\n      } else if(xxTree._listeners) {\r\n        // We have reached the end and still on a '**'\r\n        searchListenerTree(handlers, type, xxTree, typeLength);\r\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\r\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\r\n      }\r\n    }\r\n\r\n    return listeners;\r\n  }\r\n\r\n  function growListenerTree(type, listener) {\r\n\r\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n\r\n    //\r\n    // Looks for two consecutive '**', if so, don't add the event at all.\r\n    //\r\n    for(var i = 0, len = type.length; i+1 < len; i++) {\r\n      if(type[i] === '**' && type[i+1] === '**') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var tree = this.listenerTree;\r\n    var name = type.shift();\r\n\r\n    while (name !== undefined) {\r\n\r\n      if (!tree[name]) {\r\n        tree[name] = {};\r\n      }\r\n\r\n      tree = tree[name];\r\n\r\n      if (type.length === 0) {\r\n\r\n        if (!tree._listeners) {\r\n          tree._listeners = listener;\r\n        }\r\n        else {\r\n          if (typeof tree._listeners === 'function') {\r\n            tree._listeners = [tree._listeners];\r\n          }\r\n\r\n          tree._listeners.push(listener);\r\n\r\n          if (\r\n            !tree._listeners.warned &&\r\n            this._maxListeners > 0 &&\r\n            tree._listeners.length > this._maxListeners\r\n          ) {\r\n            tree._listeners.warned = true;\r\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      name = type.shift();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // By default EventEmitters will print a warning if more than\r\n  // 10 listeners are added to it. This is a useful default which\r\n  // helps finding memory leaks.\r\n  //\r\n  // Obviously not all Emitters should be limited to 10. This function allows\r\n  // that to be increased. Set to zero for unlimited.\r\n\r\n  EventEmitter.prototype.delimiter = '.';\r\n\r\n  EventEmitter.prototype.setMaxListeners = function(n) {\r\n    if (n !== undefined) {\r\n      this._maxListeners = n;\r\n      if (!this._conf) this._conf = {};\r\n      this._conf.maxListeners = n;\r\n    }\r\n  };\r\n\r\n  EventEmitter.prototype.event = '';\r\n\r\n\r\n  EventEmitter.prototype.once = function(event, fn) {\r\n    return this._once(event, fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependOnceListener = function(event, fn) {\r\n    return this._once(event, fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype._once = function(event, fn, prepend) {\r\n    this._many(event, 1, fn, prepend);\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.many = function(event, ttl, fn) {\r\n    return this._many(event, ttl, fn, false);\r\n  }\r\n\r\n  EventEmitter.prototype.prependMany = function(event, ttl, fn) {\r\n    return this._many(event, ttl, fn, true);\r\n  }\r\n\r\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend) {\r\n    var self = this;\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('many only accepts instances of Function');\r\n    }\r\n\r\n    function listener() {\r\n      if (--ttl === 0) {\r\n        self.off(event, listener);\r\n      }\r\n      return fn.apply(this, arguments);\r\n    }\r\n\r\n    listener._origin = fn;\r\n\r\n    this._on(event, listener, prepend);\r\n\r\n    return self;\r\n  };\r\n\r\n  EventEmitter.prototype.emit = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this._newListener) {\r\n      if (!this._events.newListener) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all && this._all.length) {\r\n      handler = this._all.slice();\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 0; j < al; j++) args[j] = arguments[j];\r\n      }\r\n\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this, type);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, type, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, type, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n      if (typeof handler === 'function') {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler.call(this);\r\n          break;\r\n        case 2:\r\n          handler.call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler.call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          args = new Array(al - 1);\r\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n          handler.apply(this, args);\r\n        }\r\n        return true;\r\n      } else if (handler) {\r\n        // need to make copy of handlers because list can change in the middle\r\n        // of emit call\r\n        handler = handler.slice();\r\n      }\r\n    }\r\n\r\n    if (handler && handler.length) {\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          handler[i].call(this);\r\n          break;\r\n        case 2:\r\n          handler[i].call(this, arguments[1]);\r\n          break;\r\n        case 3:\r\n          handler[i].call(this, arguments[1], arguments[2]);\r\n          break;\r\n        default:\r\n          handler[i].apply(this, args);\r\n        }\r\n      }\r\n      return true;\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        throw arguments[1]; // Unhandled 'error' event\r\n      } else {\r\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return !!this._all;\r\n  };\r\n\r\n  EventEmitter.prototype.emitAsync = function() {\r\n\r\n    this._events || init.call(this);\r\n\r\n    var type = arguments[0];\r\n\r\n    if (type === 'newListener' && !this._newListener) {\r\n        if (!this._events.newListener) { return Promise.resolve([false]); }\r\n    }\r\n\r\n    var promises= [];\r\n\r\n    var al = arguments.length;\r\n    var args,l,i,j;\r\n    var handler;\r\n\r\n    if (this._all) {\r\n      if (al > 3) {\r\n        args = new Array(al);\r\n        for (j = 1; j < al; j++) args[j] = arguments[j];\r\n      }\r\n      for (i = 0, l = this._all.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(this._all[i].call(this, type));\r\n          break;\r\n        case 2:\r\n          promises.push(this._all[i].call(this, type, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(this._all[i].apply(this, args));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      handler = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\r\n    } else {\r\n      handler = this._events[type];\r\n    }\r\n\r\n    if (typeof handler === 'function') {\r\n      this.event = type;\r\n      switch (al) {\r\n      case 1:\r\n        promises.push(handler.call(this));\r\n        break;\r\n      case 2:\r\n        promises.push(handler.call(this, arguments[1]));\r\n        break;\r\n      case 3:\r\n        promises.push(handler.call(this, arguments[1], arguments[2]));\r\n        break;\r\n      default:\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n        promises.push(handler.apply(this, args));\r\n      }\r\n    } else if (handler && handler.length) {\r\n      handler = handler.slice();\r\n      if (al > 3) {\r\n        args = new Array(al - 1);\r\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\r\n      }\r\n      for (i = 0, l = handler.length; i < l; i++) {\r\n        this.event = type;\r\n        switch (al) {\r\n        case 1:\r\n          promises.push(handler[i].call(this));\r\n          break;\r\n        case 2:\r\n          promises.push(handler[i].call(this, arguments[1]));\r\n          break;\r\n        case 3:\r\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\r\n          break;\r\n        default:\r\n          promises.push(handler[i].apply(this, args));\r\n        }\r\n      }\r\n    } else if (!this._all && type === 'error') {\r\n      if (arguments[1] instanceof Error) {\r\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\r\n      } else {\r\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\r\n      }\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  };\r\n\r\n  EventEmitter.prototype.on = function(type, listener) {\r\n    return this._on(type, listener, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependListener = function(type, listener) {\r\n    return this._on(type, listener, true);\r\n  };\r\n\r\n  EventEmitter.prototype.onAny = function(fn) {\r\n    return this._onAny(fn, false);\r\n  };\r\n\r\n  EventEmitter.prototype.prependAny = function(fn) {\r\n    return this._onAny(fn, true);\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  EventEmitter.prototype._onAny = function(fn, prepend){\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('onAny only accepts instances of Function');\r\n    }\r\n\r\n    if (!this._all) {\r\n      this._all = [];\r\n    }\r\n\r\n    // Add the function to the event listener collection.\r\n    if(prepend){\r\n      this._all.unshift(fn);\r\n    }else{\r\n      this._all.push(fn);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  EventEmitter.prototype._on = function(type, listener, prepend) {\r\n    if (typeof type === 'function') {\r\n      this._onAny(type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('on only accepts instances of Function');\r\n    }\r\n    this._events || init.call(this);\r\n\r\n    // To avoid recursion in the case that type == \"newListeners\"! Before\r\n    // adding it to the listeners, first emit \"newListeners\".\r\n    if (this._newListener)\r\n       this.emit('newListener', type, listener);\r\n\r\n    if (this.wildcard) {\r\n      growListenerTree.call(this, type, listener);\r\n      return this;\r\n    }\r\n\r\n    if (!this._events[type]) {\r\n      // Optimize the case of one listener. Don't need the extra array object.\r\n      this._events[type] = listener;\r\n    }\r\n    else {\r\n      if (typeof this._events[type] === 'function') {\r\n        // Change to array.\r\n        this._events[type] = [this._events[type]];\r\n      }\r\n\r\n      // If we've already got an array, just add\r\n      if(prepend){\r\n        this._events[type].unshift(listener);\r\n      }else{\r\n        this._events[type].push(listener);\r\n      }\r\n\r\n      // Check for listener leak\r\n      if (\r\n        !this._events[type].warned &&\r\n        this._maxListeners > 0 &&\r\n        this._events[type].length > this._maxListeners\r\n      ) {\r\n        this._events[type].warned = true;\r\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  EventEmitter.prototype.off = function(type, listener) {\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('removeListener only takes instances of Function');\r\n    }\r\n\r\n    var handlers,leafs=[];\r\n\r\n    if(this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n    }\r\n    else {\r\n      // does not use listeners(), so no side effect of creating _events[type]\r\n      if (!this._events[type]) return this;\r\n      handlers = this._events[type];\r\n      leafs.push({_listeners:handlers});\r\n    }\r\n\r\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n      var leaf = leafs[iLeaf];\r\n      handlers = leaf._listeners;\r\n      if (isArray(handlers)) {\r\n\r\n        var position = -1;\r\n\r\n        for (var i = 0, length = handlers.length; i < length; i++) {\r\n          if (handlers[i] === listener ||\r\n            (handlers[i].listener && handlers[i].listener === listener) ||\r\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\r\n            position = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (position < 0) {\r\n          continue;\r\n        }\r\n\r\n        if(this.wildcard) {\r\n          leaf._listeners.splice(position, 1);\r\n        }\r\n        else {\r\n          this._events[type].splice(position, 1);\r\n        }\r\n\r\n        if (handlers.length === 0) {\r\n          if(this.wildcard) {\r\n            delete leaf._listeners;\r\n          }\r\n          else {\r\n            delete this._events[type];\r\n          }\r\n        }\r\n        if (this._removeListener)\r\n          this.emit(\"removeListener\", type, listener);\r\n\r\n        return this;\r\n      }\r\n      else if (handlers === listener ||\r\n        (handlers.listener && handlers.listener === listener) ||\r\n        (handlers._origin && handlers._origin === listener)) {\r\n        if(this.wildcard) {\r\n          delete leaf._listeners;\r\n        }\r\n        else {\r\n          delete this._events[type];\r\n        }\r\n        if (this._removeListener)\r\n          this.emit(\"removeListener\", type, listener);\r\n      }\r\n    }\r\n\r\n    function recursivelyGarbageCollect(root) {\r\n      if (root === undefined) {\r\n        return;\r\n      }\r\n      var keys = Object.keys(root);\r\n      for (var i in keys) {\r\n        var key = keys[i];\r\n        var obj = root[key];\r\n        if ((obj instanceof Function) || (typeof obj !== \"object\") || (obj === null))\r\n          continue;\r\n        if (Object.keys(obj).length > 0) {\r\n          recursivelyGarbageCollect(root[key]);\r\n        }\r\n        if (Object.keys(obj).length === 0) {\r\n          delete root[key];\r\n        }\r\n      }\r\n    }\r\n    recursivelyGarbageCollect(this.listenerTree);\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.offAny = function(fn) {\r\n    var i = 0, l = 0, fns;\r\n    if (fn && this._all && this._all.length > 0) {\r\n      fns = this._all;\r\n      for(i = 0, l = fns.length; i < l; i++) {\r\n        if(fn === fns[i]) {\r\n          fns.splice(i, 1);\r\n          if (this._removeListener)\r\n            this.emit(\"removeListenerAny\", fn);\r\n          return this;\r\n        }\r\n      }\r\n    } else {\r\n      fns = this._all;\r\n      if (this._removeListener) {\r\n        for(i = 0, l = fns.length; i < l; i++)\r\n          this.emit(\"removeListenerAny\", fns[i]);\r\n      }\r\n      this._all = [];\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\r\n\r\n  EventEmitter.prototype.removeAllListeners = function(type) {\r\n    if (type === undefined) {\r\n      !this._events || init.call(this);\r\n      return this;\r\n    }\r\n\r\n    if (this.wildcard) {\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\r\n\r\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\r\n        var leaf = leafs[iLeaf];\r\n        leaf._listeners = null;\r\n      }\r\n    }\r\n    else if (this._events) {\r\n      this._events[type] = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.listeners = function(type) {\r\n    if (this.wildcard) {\r\n      var handlers = [];\r\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\r\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\r\n      return handlers;\r\n    }\r\n\r\n    this._events || init.call(this);\r\n\r\n    if (!this._events[type]) this._events[type] = [];\r\n    if (!isArray(this._events[type])) {\r\n      this._events[type] = [this._events[type]];\r\n    }\r\n    return this._events[type];\r\n  };\r\n\r\n  EventEmitter.prototype.eventNames = function(){\r\n    return Object.keys(this._events);\r\n  }\r\n\r\n  EventEmitter.prototype.listenerCount = function(type) {\r\n    return this.listeners(type).length;\r\n  };\r\n\r\n  EventEmitter.prototype.listenersAny = function() {\r\n\r\n    if(this._all) {\r\n      return this._all;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n\r\n  };\r\n\r\n  if (typeof define === 'function' && define.amd) {\r\n     // AMD. Register as an anonymous module.\r\n    define(function() {\r\n      return EventEmitter;\r\n    });\r\n  } else if (typeof exports === 'object') {\r\n    // CommonJS\r\n    module.exports = EventEmitter;\r\n  }\r\n  else {\r\n    // Browser global.\r\n    window.EventEmitter2 = EventEmitter;\r\n  }\r\n}();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}